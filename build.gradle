buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.2.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.openapi.generator" version "7.5.0"
}

group = 'com.connector'
version = '0.0.1'
archivesBaseName = 'github-connector'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M1")
    set('springCloudVersion', "2023.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.111.Final'

    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/static/swagger.yaml")
    outputDir.set("$buildDir/generated-source/swagger")
    apiPackage.set("com.connector.github.api")
    invokerPackage.set("com.connector.github.invoker")
    modelPackage.set("com.connector.github.dto")
    configOptions.put("library", "spring-boot")
    configOptions.put("dateLibrary", "java8")
    configOptions.put("useTags", "true")
    configOptions.put("interfaceOnly", "true")
    configOptions.put("reactive", "true")
}

sourceSets {
    main {
        java {
            srcDirs "$buildDir/generated-source/swagger/src/main/java"
        }
    }
}
tasks.compileJava.dependsOn tasks.openApiGenerate


tasks.test {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform {
        includeTags 'test'
    }
}

tasks.register('integrationTest', Test) {
    group 'verification'
    useJUnitPlatform {
        includeTags 'integration-test'
    }
    shouldRunAfter test
}
check.dependsOn integrationTest
